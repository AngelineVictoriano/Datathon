x="Number of CT scans per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_CT_scans, expenditure_to_GDP), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_CT_scans, expenditure_to_GDP, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of diagnositc exams with spending",
subtitle = "?",
x="Number of CT scans per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_CT_scans, expenditure_to_GDP), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_CT_scans, expenditure_to_GDP, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of diagnositc exams with spending",
subtitle = "Does increaed healthcare spending results in increased diagnostic scans?",
x="Number of CT scans per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_CT_scans, expenditure_to_GDP), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_CT_scans, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of diagnositc exams with free healthcare",
subtitle = "?",
x="Number of CT scans per 1000 population", y = "Share of govt or complusory contributions") +
geom_smooth(aes(mean_CT_scans, govt_contributions), method=lm, se=FALSE) +
scale_color_brewer(palette="Dark2") +
theme_classic()
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_CT_scans, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of diagnositc exams with free healthcare",
subtitle = "?",
x="Number of CT scans per 1000 population", y = "Share of govt or complusory contributions") +
geom_smooth(aes(mean_CT_scans, govt_contributions), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_CT_scans, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of diagnositc exams with free healthcare",
subtitle = "Does financially free acess to healthcare results in increased diagnostic scans?",
x="Number of CT scans per 1000 population", y = "Share of govt or complusory contributions") +
geom_smooth(aes(mean_CT_scans, govt_contributions), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
library(ggrepel)
# loading previously saved processed data
expenditure_data <- readRDS(here::here("processed_data", "expenditure_data.rds"))
# data wrangling
UHC_trend <- expenditure_data %>%
# retain first column (country) and extract govt and individual contributions
select(c(1, 2) | contains("Government/compulsory schemes")) %>%
# getting all expenditure (subgroup)
select(c(1, 2) | contains("Current expenditure on health (all functions)")) %>%
# get data from all providers
select(c(1, 2) | contains("All providers")) %>%
# get "share of current expenditure on health"
select(c(1, 2) | contains("Share of current expenditure on health")) %>%
# renaming column
rename(UHC_share = 3) %>%
# making year column as factors
mutate(year = as.factor(year))
UHC_trend %>%
ggplot(aes(x=year, y = UHC_share, group = country)) +
geom_line() +
geom_line(data = subset(UHC_trend,  country == "India"),color = "red", size = 1.25) +
geom_point(data = subset(UHC_trend,  country == "India" & year == 2019),color = "red") +
geom_label_repel(data = subset(UHC_trend,  country == "India" & year == 2019), aes(label = country),
nudge_x = 1) +
geom_line(data = subset(UHC_trend,  country == "United States"),color = "Green", size = 1.25) +
geom_line(data = subset(UHC_trend,  country == "United States" & year == 2022),color = "Green") +
geom_label_repel(data = subset(UHC_trend,  country == "United States" & year == 2020), aes(label = country),
nudge_x = 1) +
geom_line(data = subset(UHC_trend,  country == "Cyprus"),color = "Blue", size = 1.25) +
geom_line(data = subset(UHC_trend,  country == "Cyprus" & year == 20222),color = "Blue") +
geom_label_repel(data = subset(UHC_trend,  country == "Cyprus" & year == 2020), aes(label = country),
nudge_x = 1) +
labs(title="Trend of universal healthcare by countries",
subtitle = "The hightlighted countries shows significant increase",
x="Years", y = "Share of compulsory healthcare financing") +
theme_classic()
UHC_trend %>%
ggplot(aes(x=year, y = UHC_share, group = country)) +
geom_line(color = "gray") +
geom_line(data = subset(UHC_trend,  country == "India"),color = "red", size = 1.25) +
geom_point(data = subset(UHC_trend,  country == "India" & year == 2019),color = "red") +
geom_label_repel(data = subset(UHC_trend,  country == "India" & year == 2019), aes(label = country),
nudge_x = 1) +
geom_line(data = subset(UHC_trend,  country == "United States"),color = "Green", size = 1.25) +
geom_line(data = subset(UHC_trend,  country == "United States" & year == 2022),color = "Green") +
geom_label_repel(data = subset(UHC_trend,  country == "United States" & year == 2020), aes(label = country),
nudge_x = 1) +
geom_line(data = subset(UHC_trend,  country == "Cyprus"),color = "Blue", size = 1.25) +
geom_line(data = subset(UHC_trend,  country == "Cyprus" & year == 20222),color = "Blue") +
geom_label_repel(data = subset(UHC_trend,  country == "Cyprus" & year == 2020), aes(label = country),
nudge_x = 1) +
labs(title="Trend of universal healthcare by countries",
subtitle = "The hightlighted countries shows significant increase",
x="Years", y = "Share of compulsory healthcare financing") +
theme_classic()
UHC_trend %>%
ggplot(aes(x=year, y = UHC_share, group = country)) +
geom_line(color = "gray") +
geom_line(data = subset(UHC_trend,  country == "India"),color = "red", size = 1.25) +
geom_point(data = subset(UHC_trend,  country == "India" & year == 2019),color = "red") +
geom_label_repel(data = subset(UHC_trend,  country == "India" & year == 2019), aes(label = country),
nudge_x = 1) +
geom_line(data = subset(UHC_trend,  country == "United States"),color = "Green", size = 1.25) +
geom_line(data = subset(UHC_trend,  country == "United States" & year == 2022),color = "Green") +
geom_label_repel(data = subset(UHC_trend,  country == "United States" & year == 2020), aes(label = country),
nudge_x = 1) +
labs(title="Trend of universal healthcare by countries",
subtitle = "The hightlighted countries shows significant increase",
x="Years", y = "Share of compulsory healthcare financing") +
theme_classic()
UHC_trend %>%
ggplot(aes(x=year, y = UHC_share, group = country)) +
geom_line(color = "gray") +
geom_line(data = subset(UHC_trend,  country == "India"),color = "red", size = 1.25) +
geom_point(data = subset(UHC_trend,  country == "India" & year == 2019),color = "red") +
geom_label_repel(data = subset(UHC_trend,  country == "India" & year == 2019), aes(label = country),
nudge_x = 1) +
geom_line(data = subset(UHC_trend,  country == "United States"),color = "Green", size = 1.25) +
geom_line(data = subset(UHC_trend,  country == "United States" & year == 2022),color = "Green") +
geom_label_repel(data = subset(UHC_trend,  country == "United States" & year == 2020), aes(label = country),
nudge_x = 1) +
labs(title="Trend of universal healthcare by countries",
subtitle = "The highlighted countries shows progression to univeral healthcare.
\n Rest of the countries are grayed out",
x="Years", y = "Share of compulsory healthcare financing") +
theme_classic()
# hip replacement
hip_replacement <- oecd_data %>%
# selecting country column and length of stay column
select(c(2) | contains("Hip replacement")) %>%
select(c(1) | contains("per 100 000 population")) %>%
select(c(1) | contains("Total")) %>%
rename(hip_replacement_rate = 2) %>%
# group the rows by countries and get mean of scans
group_by(country) %>%
summarise(mean_hip_replacement_rate = mean(hip_replacement_rate, na.rm = TRUE)) %>%
drop_na(2)
# merging with income data
df_for_plotting <- hip_replacement %>%
inner_join(merged_income_data, by = c("country"))
# Scatterplot
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, expenditure_to_GDP, color = income_group), size = 2) +
labs(title="Correlation of number of hip surgeries with spending",
subtitle = "?",
x="Number of hip surgeries per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_hip_replacement_rate, expenditure_to_GDP), method=lm, se=FALSE) +
scale_color_brewer(palette="Dark2") +
theme_classic()
# Scatterplot
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, expenditure_to_GDP, color = income_group), size = 2) +
labs(title="Correlation of number of hip surgeries with spending",
subtitle = "Increased helathcare spending has positive correlation with number of surgeries performed",
x="Number of hip surgeries per 1000 population",
y = "Healthcare expenditure",
color = "Income group") +
geom_smooth(aes(mean_hip_replacement_rate, expenditure_to_GDP), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot with UHC
merged_data %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, govt_contributions, color = income_group), size = 2) +
labs(title="Correlation of number of hip surgeries with UHC",
subtitle = "?",
x="Number of hip surgeries per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_hip_replacement_rate, govt_contributions), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot with UHC
merged_data %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, govt_contributions, color = income_group), size = 2) +
labs(title="Correlation of number of hip surgeries with UHC",
subtitle = "?",
x="Number of hip surgeries per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_hip_replacement_rate, govt_contributions), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot with UHC
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of hip surgeries with UHC",
subtitle = "?",
x="Number of hip surgeries per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_hip_replacement_rate, govt_contributions), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, expenditure_to_GDP, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of hip surgeries with spending",
subtitle = "Increased helathcare spending has positive correlation with number of surgeries performed",
x="Number of hip surgeries per 1000 population",
y = "Healthcare expenditure",
color = "Income group") +
geom_smooth(aes(mean_hip_replacement_rate, expenditure_to_GDP), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot with UHC
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of hip surgeries with UHC",
subtitle = "?",
x="Number of hip surgeries per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_hip_replacement_rate, govt_contributions), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot with UHC
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of hip surgeries with UHC",
subtitle = "free acess to healthcare has positive correlation with number of surgeries performed",
x="Number of hip surgeries per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_hip_replacement_rate, govt_contributions), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot with UHC
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_hip_replacement_rate, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of number of hip surgeries with UHC",
subtitle = "Free acess to healthcare has positive correlation with number of surgeries performed",
x="Number of hip surgeries per 1000 population", y = "Healthcare expenditure") +
geom_smooth(aes(mean_hip_replacement_rate, govt_contributions), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# knee replacement
knee_replacement <- oecd_data %>%
# selecting country column and length of stay column
select(c(2) | contains("Knee replacement")) %>%
select(c(1) | contains("Waiting times of patients on the list: Mean (days)")) %>%
rename(knee_replacement = 2) %>%
# group the rows by countries and get mean of scans
group_by(country) %>%
summarise(mean_knee_replacement_waiting_time = mean(knee_replacement, na.rm = TRUE)) %>%
drop_na(2)
# merging with income data
df_for_plotting <- knee_replacement %>%
inner_join(merged_income_data, by = c("country"))
# Scatterplot
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_knee_replacement_waiting_time, expenditure_to_GDP, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of waiting times for knee replacement with spending",
subtitle = "?",
x="Mean number of days for knee replacement waiting list", y = "Healthcare expenditure") +
geom_smooth(aes(mean_knee_replacement_waiting_time, expenditure_to_GDP), method=lm, se=FALSE) +
scale_color_brewer(palette="Dark2") +
theme_classic()
# Scatterplot
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_knee_replacement_waiting_time, expenditure_to_GDP, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of waiting times for knee replacement with spending",
subtitle = "?",
x="Mean number of days for knee replacement waiting list", y = "Healthcare expenditure") +
geom_smooth(aes(mean_knee_replacement_waiting_time, expenditure_to_GDP), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_knee_replacement_waiting_time, expenditure_to_GDP, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of waiting times for knee replacement with spending",
subtitle = "Does increased healthcare spending reduced waiting time to elective surgeries?",
x="Mean number of days for knee replacement waiting list", y = "Healthcare expenditure") +
geom_smooth(aes(mean_knee_replacement_waiting_time, expenditure_to_GDP), method=lm, se=FALSE) +
scale_fill_ipsum() +
theme_classic()
# Scatterplot with UHC
merged_data %>%
ggplot() +
geom_count(aes(mean_knee_replacement_waiting_time, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of waiting times with UHC",
subtitle = "Does increased healthcare spending reduced waiting time to elective surgeries?",
x="Mean number of days for knee replacement specilist assesement", y = "Healthcare expenditure") +
geom_smooth(aes(mean_knee_replacement_waiting_time, govt_contributions), method=lm, se=FALSE) +
scale_color_brewer(palette="Dark2") +
theme_classic()
# Scatterplot with UHC
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_knee_replacement_waiting_time, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of waiting times with UHC",
subtitle = "Does increased healthcare spending reduced waiting time to elective surgeries?",
x="Mean number of days for knee replacement specilist assesement", y = "Healthcare expenditure") +
geom_smooth(aes(mean_knee_replacement_waiting_time, govt_contributions), method=lm, se=FALSE) +
scale_color_brewer(palette="Dark2") +
theme_classic()
# Scatterplot with UHC
df_for_plotting %>%
ggplot() +
geom_count(aes(mean_knee_replacement_waiting_time, govt_contributions, color = income_group), size = 2) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
labs(title="Correlation of waiting times with UHC",
subtitle = "Does free access to healthcare reduced waiting time to elective surgeries?",
x="Mean number of days for knee replacement waiting list", y = "Share of government/compulsory healthcare financing") +
geom_smooth(aes(mean_knee_replacement_waiting_time, govt_contributions), method=lm, se=FALSE) +
scale_color_brewer(palette="Dark2") +
theme_classic()
OECD_countries <- read_csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/mai
n/data/oecd.csv")
OECD_countries_list <- OECD_countries$Name
# package for loading world map
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
#removing Antarctica as it takes space
filter(continent !="Antarctica")
# making simple theme for the map
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
View(world)
View(expenditure_data)
health_expenditure_to_GDP %>%
rename(name = country)
expenditure_data <- readRDS("C:/Users/kumar/mygithubpulls/Datathon/processed_data/expenditure_data.rds")
health_expenditure_to_GDP <- expenditure_data %>%
filter(year == 2019) %>%
# as year 2019 is selected, the year column can be dropped
select(-year) %>%
# retain first column and extract all financing schemes
select(c(1) | contains("All financing schemes")) %>%
# similarly, get all expenditure (under name current expenditure)
select(c(1) | contains("Current expenditure on health (all functions)")) %>%
# get data from all providers
select(c(1) | contains("All providers")) %>%
# get column of GDP %
select(c(1) | contains("Share of gross domestic product")) %>%
# rename the column name to expenditure_to_GDP
rename(expenditure_to_GDP = 2)
health_expenditure_to_GDP %>%
rename(name = country)
health_expenditure_to_GDP <- health_expenditure_to_GDP %>%
rename(name = country)
merged_df <- merge(x=world, y=health_expenditure_2019, by="name", all.y = TRUE) %>%
filter(name %in% OECD_countries_list)
health_expenditure_to_GDP <- health_expenditure_to_GDP %>%
rename(name = country)
merged_df <- merge(x=world, y=health_expenditure_to_GDP, by="name", all.y = TRUE) %>%
filter(name %in% OECD_countries_list)
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_fill_viridis_c(option = "C") +
plain
View(merged_df)
# package for loading world map
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)
library(tidyverse)
library(janitor)
library(kableExtra)
library(readxl)
library(hrbrthemes)
library(ggrepel)
expenditure_data <- readRDS("C:/Users/kumar/mygithubpulls/Datathon/processed_data/expenditure_data.rds")
health_expenditure_to_GDP <- expenditure_data %>%
filter(year == 2019) %>%
# as year 2019 is selected, the year column can be dropped
select(-year) %>%
# retain first column and extract all financing schemes
select(c(1) | contains("All financing schemes")) %>%
# similarly, get all expenditure (under name current expenditure)
select(c(1) | contains("Current expenditure on health (all functions)")) %>%
# get data from all providers
select(c(1) | contains("All providers")) %>%
# get column of GDP %
select(c(1) | contains("Share of gross domestic product")) %>%
# rename the column name to expenditure_to_GDP
rename(expenditure_to_GDP = 2)
OECD_countries <- read_csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/mai
n/data/oecd.csv")
OECD_countries_list <- OECD_countries$Name
View(OECD_countries)
View(OECD_countries)
OECD_countries <- read_csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/oecd.csv")
OECD_countries_list <- OECD_countries$Name
OECD_countries <- read_csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/oecd.csv")
OECD_countries_list <- OECD_countries$Name
# getting map data and removing Antarctica (as it takes space)
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
#removing Antarctica as it takes space
filter(continent !="Antarctica")
# making simple theme for the map
plain <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
health_expenditure_to_GDP <- health_expenditure_to_GDP %>%
rename(name = country)
merged_df <- merge(x=world, y=health_expenditure_to_GDP, by="name", all.y = TRUE) %>%
filter(name %in% OECD_countries_list)
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_fill_viridis_c(option = "C") +
plain
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_fill_ipsum() +
plain
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
plain
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_fill_gradient(
low = "#132B43",
high = "#56B1F7",
space = "Lab",
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill"
ggplot() +
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_fill_viridis_c() +
plain
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_fill_gradientn(colours = terrain.colors(7)) +
plain
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_fill_gradientn(colours = colorspace::diverge_hcl(7)) +
plain
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_color_gradient(low = "green", high = "red") +
plain
ggplot() +
geom_sf(data= world, color = "gray", fill = "gray") +
geom_sf(data=merged_df, color = "white", aes(fill=expenditure_to_GDP)) +
labs(title="Healthcare expenditure as percentage of GDP", fill = "% of
GDP") +
scale_fill_gradient(low = "green", high = "red") +
plain
